webpackHotUpdate(0,{

/***/ 335:
/* unknown exports provided */
/* all exports used */
/*!****************************************************!*\
  !*** ./~/react-html5video/dist/ReactHtml5Video.js ***!
  \****************************************************/
/***/ (function(module, exports, __webpack_require__) {

eval("(function webpackUniversalModuleDefinition(root, factory) {\n\tif(true)\n\t\tmodule.exports = factory(__webpack_require__(/*! react */ 20));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"react\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"ReactHtml5Video\"] = factory(require(\"react\"));\n\telse\n\t\troot[\"ReactHtml5Video\"] = factory(root[\"React\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE_63__) {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n\n\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t__webpack_require__(1);\n\tmodule.exports = __webpack_require__(20);\n\n\n/***/ },\n/* 1 */\n/***/ function(module, exports) {\n\n\t// removed by extract-text-webpack-plugin\n\n/***/ },\n/* 2 */,\n/* 3 */,\n/* 4 */,\n/* 5 */,\n/* 6 */,\n/* 7 */,\n/* 8 */,\n/* 9 */,\n/* 10 */,\n/* 11 */,\n/* 12 */,\n/* 13 */,\n/* 14 */,\n/* 15 */,\n/* 16 */,\n/* 17 */,\n/* 18 */,\n/* 19 */,\n/* 20 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\n\tvar _objectWithoutProperties = __webpack_require__(21)['default'];\n\n\tvar _extends = __webpack_require__(23)['default'];\n\n\tvar _Object$assign = __webpack_require__(24)['default'];\n\n\tvar _interopRequireDefault = __webpack_require__(61)['default'];\n\n\tObject.defineProperty(exports, '__esModule', {\n\t    value: true\n\t});\n\n\tvar _react = __webpack_require__(63);\n\n\tvar _react2 = _interopRequireDefault(_react);\n\n\tvar _overlayOverlay = __webpack_require__(64);\n\n\tvar _overlayOverlay2 = _interopRequireDefault(_overlayOverlay);\n\n\tvar _controlsControls = __webpack_require__(67);\n\n\tvar _controlsControls2 = _interopRequireDefault(_controlsControls);\n\n\tvar _controlsSeekSeek = __webpack_require__(69);\n\n\tvar _controlsSeekSeek2 = _interopRequireDefault(_controlsSeekSeek);\n\n\tvar _controlsPlayPlay = __webpack_require__(68);\n\n\tvar _controlsPlayPlay2 = _interopRequireDefault(_controlsPlayPlay);\n\n\tvar _controlsMuteMute = __webpack_require__(76);\n\n\tvar _controlsMuteMute2 = _interopRequireDefault(_controlsMuteMute);\n\n\tvar _controlsFullscreenFullscreen = __webpack_require__(78);\n\n\tvar _controlsFullscreenFullscreen2 = _interopRequireDefault(_controlsFullscreenFullscreen);\n\n\tvar _controlsTimeTime = __webpack_require__(77);\n\n\tvar _controlsTimeTime2 = _interopRequireDefault(_controlsTimeTime);\n\n\tvar _lodashThrottle = __webpack_require__(79);\n\n\tvar _lodashThrottle2 = _interopRequireDefault(_lodashThrottle);\n\n\tvar _assetsCopy = __webpack_require__(82);\n\n\tvar _assetsCopy2 = _interopRequireDefault(_assetsCopy);\n\n\tvar EVENTS = ['onAbort', 'onCanPlay', 'onCanPlayThrough', 'onDurationChange', 'onEmptied', 'onEncrypted', 'onEnded', 'onError', 'onLoadedData', 'onLoadedMetadata', 'onLoadStart', 'onPause', 'onPlay', 'onPlaying', 'onProgress', 'onRateChange', 'onSeeked', 'onSeeking', 'onStalled', 'onSuspend', 'onTimeUpdate', 'onVolumeChange', 'onWaiting'];\n\n\tvar Video = _react2['default'].createClass({\n\t    displayName: 'Video',\n\n\t    propTypes: {\n\t        // Non-standard props\n\t        copyKeys: _react2['default'].PropTypes.object,\n\t        children: _react2['default'].PropTypes.node,\n\t        className: _react2['default'].PropTypes.string,\n\n\t        // HTML5 Video standard attributes\n\t        autoPlay: _react2['default'].PropTypes.bool,\n\t        muted: _react2['default'].PropTypes.bool,\n\t        controls: _react2['default'].PropTypes.bool\n\t    },\n\n\t    getDefaultProps: function getDefaultProps() {\n\t        return {\n\t            copyKeys: _assetsCopy2['default']\n\t        };\n\t    },\n\n\t    getInitialState: function getInitialState() {\n\t        // Set state from props and always use these\n\t        // to check state of video as they will update\n\t        // on the video events. Changing this state however will not\n\t        // change the video. The API methods must be used.\n\t        return {\n\t            networkState: 0,\n\t            paused: !this.props.autoPlay,\n\t            muted: !!this.props.muted,\n\t            volume: 1,\n\t            playbackRate: 1,\n\t            error: false,\n\t            loading: false\n\t        };\n\t    },\n\n\t    /**\n\t     * Creates a throttle update method.\n\t     * @return {undefined}\n\t     */\n\t    componentWillMount: function componentWillMount() {\n\t        var _this = this;\n\n\t        this._updateStateFromVideo = (0, _lodashThrottle2['default'])(this.updateStateFromVideo, 100);\n\t        // Set up all React media events and call method\n\t        // on props if provided.\n\t        this.mediaEventProps = EVENTS.reduce(function (p, c) {\n\t            p[c] = function (e) {\n\t                if (c in _this.props && typeof _this.props[c] === 'function') {\n\t                    // A prop exists for this mediaEvent, call it.\n\t                    _this.props[c](e);\n\t                }\n\t                _this._updateStateFromVideo();\n\t            };\n\t            return p;\n\t        }, {});\n\t    },\n\n\t    /**\n\t     * Bind eventlisteners not supported by React's synthetic events\n\t     * https://facebook.github.io/react/docs/events.html\n\t     * @return {undefined}\n\t     */\n\t    componentDidMount: function componentDidMount() {\n\t        // Listen to error of last source.\n\t        this.videoEl.children[this.videoEl.children.length - 1].addEventListener('error', this._updateStateFromVideo);\n\t    },\n\n\t    /**\n\t     * Removes event listeners bound outside of React's synthetic events\n\t     * @return {undefined}\n\t     */\n\t    componentWillUnmount: function componentWillUnmount() {\n\t        // Remove event listener from video.\n\t        this.videoEl.children[this.videoEl.children.length - 1].removeEventListener('error', this._updateStateFromVideo);\n\t        // Cancel the throttled function from being called once\n\t        // the video has been unmounted.\n\t        // https://github.com/mderrick/react-html5video/issues/35\n\t        this._updateStateFromVideo.cancel();\n\t    },\n\n\t    /**\n\t     * Toggles the video to play and pause.\n\t     * @return {undefined}\n\t     */\n\t    togglePlay: function togglePlay() {\n\t        if (this.state.paused) {\n\t            this.play();\n\t        } else {\n\t            this.pause();\n\t        }\n\t    },\n\n\t    /**\n\t     * Toggles the video to mute and unmute.\n\t     * @return {undefined}\n\t     */\n\t    toggleMute: function toggleMute() {\n\t        if (this.state.muted) {\n\t            this.unmute();\n\t        } else {\n\t            this.mute();\n\t        }\n\t    },\n\n\t    /**\n\t     * Loads video.\n\t     * @return {undefined}\n\t     */\n\t    load: function load() {\n\t        this.videoEl.load();\n\t    },\n\n\t    /**\n\t     * Sets the video to fullscreen.\n\t     * @return {undefined}\n\t     */\n\t    fullscreen: function fullscreen() {\n\t        if (this.videoEl.requestFullscreen) {\n\t            this.videoEl.requestFullscreen();\n\t        } else if (this.videoEl.msRequestFullscreen) {\n\t            this.videoEl.msRequestFullscreen();\n\t        } else if (this.videoEl.mozRequestFullScreen) {\n\t            this.videoEl.mozRequestFullScreen();\n\t        } else if (this.videoEl.webkitRequestFullscreen) {\n\t            this.videoEl.webkitRequestFullscreen();\n\t        }\n\t    },\n\n\t    /**\n\t     * Plays the video.\n\t     * @return {undefined}\n\t     */\n\t    play: function play() {\n\t        this.videoEl.play();\n\t    },\n\n\t    /**\n\t     * Pauses the video.\n\t     * @return {undefined}\n\t     */\n\t    pause: function pause() {\n\t        this.videoEl.pause();\n\t    },\n\n\t    /**\n\t     * Unmutes video.\n\t     * @return {undefined}\n\t     */\n\t    unmute: function unmute() {\n\t        this.videoEl.muted = false;\n\t    },\n\n\t    /**\n\t     * Mutes the video.\n\t     * @return {undefined}\n\t     */\n\t    mute: function mute() {\n\t        this.videoEl.muted = true;\n\t    },\n\n\t    /**\n\t     * Seeks the video timeline.\n\t     * @param  {number} time The value in seconds to seek to\n\t     * @param  {bool}   forceUpdate Forces a state update without waiting for\n\t     *                              throttled event.          \n\t     * @return {undefined}\n\t     */\n\t    seek: function seek(time, forceUpdate) {\n\t        this.videoEl.currentTime = time;\n\t        // In some use cases, we wish not to wait for `onSeeked` or `onSeeking`\n\t        // throttled event to update state so we force it. This is because\n\t        // this method is often triggered when dragging a bar and can feel janky.\n\t        // See https://github.com/mderrick/react-html5video/issues/43\n\t        if (forceUpdate) {\n\t            this.updateStateFromVideo();\n\t        }\n\t    },\n\n\t    /**\n\t     * Sets the video volume.\n\t     * @param  {number} volume The volume level between 0 and 1.\n\t     * @param  {bool}   forceUpdate Forces a state update without waiting for\n\t     *                              throttled event.  \n\t     * @return {undefined}\n\t     */\n\t    setVolume: function setVolume(volume, forceUpdate) {\n\t        this.videoEl.volume = volume;\n\t        // In some use cases, we wish not to wait for `onVolumeChange`\n\t        // throttled event to update state so we force it. This is because\n\t        // this method is often triggered when dragging a bar and can feel janky.\n\t        // See https://github.com/mderrick/react-html5video/issues/43\n\t        if (forceUpdate) {\n\t            this.updateStateFromVideo();\n\t        }\n\t    },\n\n\t    /**\n\t     * Sets the video playback rate.\n\t     * @param  {number} rate The playback rate (default 1.0).\n\t     * @return {undefined}\n\t     */\n\t    setPlaybackRate: function setPlaybackRate(rate) {\n\t        this.videoEl.playbackRate = rate;\n\t        this.updateStateFromVideo();\n\t    },\n\n\t    /**\n\t     * Updates the React component state from the DOM video properties.\n\t     * This is where the magic happens.\n\t     * @return {undefined}\n\t     */\n\t    updateStateFromVideo: function updateStateFromVideo() {\n\t        this.setState({\n\t            // Standard video properties\n\t            duration: this.videoEl.duration,\n\t            currentTime: this.videoEl.currentTime,\n\t            buffered: this.videoEl.buffered,\n\t            paused: this.videoEl.paused,\n\t            muted: this.videoEl.muted,\n\t            volume: this.videoEl.volume,\n\t            playbackRate: this.videoEl.playbackRate,\n\t            readyState: this.videoEl.readyState,\n\n\t            // Non-standard state computed from properties\n\t            percentageBuffered: this.videoEl.buffered.length && this.videoEl.buffered.end(this.videoEl.buffered.length - 1) / this.videoEl.duration * 100,\n\t            percentagePlayed: this.videoEl.currentTime / this.videoEl.duration * 100,\n\t            error: this.videoEl.networkState === this.videoEl.NETWORK_NO_SOURCE,\n\t            loading: this.videoEl.readyState < this.videoEl.HAVE_ENOUGH_DATA\n\t        });\n\t    },\n\n\t    /**\n\t     * Returns everything but 'source' nodes from children\n\t     * and extends props so all children have access to Video API and state.\n\t     * If there are no controls provided, returns default Controls.\n\t     * @return {Array.<ReactElement>} An array of components.\n\t     */\n\t    renderControls: function renderControls() {\n\t        var extendedProps = _Object$assign({\n\t            // The public methods that all controls should be able to\n\t            // use.\n\t            togglePlay: this.togglePlay,\n\t            toggleMute: this.toggleMute,\n\t            play: this.play,\n\t            pause: this.pause,\n\t            mute: this.mute,\n\t            unmute: this.unmute,\n\t            seek: this.seek,\n\t            fullscreen: this.fullscreen,\n\t            setVolume: this.setVolume,\n\t            setPlaybackRate: this.setPlaybackRate\n\t        }, this.state, { copyKeys: this.props.copyKeys });\n\n\t        var controls = _react2['default'].Children.map(this.props.children, function (child) {\n\t            if (child.type === 'source') {\n\t                return void 0;\n\t            }\n\t            return _react2['default'].cloneElement(child, extendedProps);\n\t        });\n\n\t        if (!controls.length) {\n\t            controls = _react2['default'].createElement(\n\t                'div',\n\t                null,\n\t                _react2['default'].createElement(_overlayOverlay2['default'], extendedProps),\n\t                _react2['default'].createElement(_controlsControls2['default'], extendedProps)\n\t            );\n\t        }\n\t        return controls;\n\t    },\n\n\t    /**\n\t     * Returns video 'source' nodes from children.\n\t     * @return {Array.<ReactElement>} An array of components.\n\t     */\n\t    renderSources: function renderSources() {\n\t        return _react2['default'].Children.map(this.props.children, function (child) {\n\t            if (child.type !== 'source') {\n\t                return void 0;\n\t            }\n\t            return child;\n\t        });\n\t    },\n\n\t    /**\n\t     * Gets the video class name based on its state\n\t     * @return {string} Class string\n\t     */\n\t    getVideoClassName: function getVideoClassName() {\n\t        var className = this.props.className;\n\n\t        var classString = 'video';\n\n\t        if (this.state.error) {\n\t            classString += ' video--error';\n\t        } else if (this.state.loading) {\n\t            classString += ' video--loading';\n\t        } else if (this.state.paused) {\n\t            classString += ' video--paused';\n\t        } else {\n\t            classString += ' video--playing';\n\t        }\n\n\t        if (this.state.focused) {\n\t            classString += ' video--focused';\n\t        }\n\t        if (className) {\n\t            classString += ' ' + className;\n\t        }\n\t        return classString;\n\t    },\n\n\t    /**\n\t     * Sets state to show focused class on video player.\n\t     * @return {undefined}\n\t     */\n\t    onFocus: function onFocus() {\n\t        this.setState({\n\t            focused: true\n\t        });\n\t    },\n\n\t    /**\n\t     * Sets state to not be focused to remove class form video\n\t     * player.\n\t     * @return {undefined}\n\t     */\n\t    onBlur: function onBlur() {\n\t        this.setState({\n\t            focused: false\n\t        });\n\t    },\n\n\t    render: function render() {\n\t        var _this2 = this;\n\n\t        // If controls prop is provided remove it\n\t        // and use our own controls.\n\t        // Leave `copyKeys` here even though not used\n\t        // as per issue #36.\n\t        var _props = this.props;\n\t        var controls = _props.controls;\n\t        var copyKeys = _props.copyKeys;\n\t        var style = _props.style;\n\n\t        var otherProps = _objectWithoutProperties(_props, ['controls', 'copyKeys', 'style']);\n\n\t        return _react2['default'].createElement(\n\t            'div',\n\t            { className: this.getVideoClassName(),\n\t                tabIndex: '0',\n\t                onFocus: this.onFocus,\n\t                onBlur: this.onBlur,\n\t                style: style },\n\t            _react2['default'].createElement(\n\t                'video',\n\t                _extends({}, otherProps, {\n\t                    className: 'video__el',\n\t                    ref: function (el) {\n\t                        _this2.videoEl = el;\n\t                    }\n\t                    //  We have throttled `_updateStateFromVideo` so listen to\n\t                    //  every available Media event that React allows and\n\t                    //  infer the Video state in that method from the Video properties.\n\t                }, this.mediaEventProps),\n\t                this.renderSources()\n\t            ),\n\t            controls ? this.renderControls() : ''\n\t        );\n\t    }\n\t});\n\n\texports['default'] = Video;\n\texports.Controls = _controlsControls2['default'];\n\texports.Seek = _controlsSeekSeek2['default'];\n\texports.Play = _controlsPlayPlay2['default'];\n\texports.Mute = _controlsMuteMute2['default'];\n\texports.Fullscreen = _controlsFullscreenFullscreen2['default'];\n\texports.Time = _controlsTimeTime2['default'];\n\texports.Overlay = _overlayOverlay2['default'];\n\n/***/ },\n/* 21 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = __webpack_require__(22);\n\n/***/ },\n/* 22 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\n\texports.__esModule = true;\n\n\texports.default = function (obj, keys) {\n\t  var target = {};\n\n\t  for (var i in obj) {\n\t    if (keys.indexOf(i) >= 0) continue;\n\t    if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;\n\t    target[i] = obj[i];\n\t  }\n\n\t  return target;\n\t};\n\n/***/ },\n/* 23 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\n\texports.__esModule = true;\n\n\tvar _assign = __webpack_require__(24);\n\n\tvar _assign2 = _interopRequireDefault(_assign);\n\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n\texports.default = _assign2.default || function (target) {\n\t  for (var i = 1; i < arguments.length; i++) {\n\t    var source = arguments[i];\n\n\t    for (var key in source) {\n\t      if (Object.prototype.hasOwnProperty.call(source, key)) {\n\t        target[key] = source[key];\n\t      }\n\t    }\n\t  }\n\n\t  return target;\n\t};\n\n/***/ },\n/* 24 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = { \"default\": __webpack_require__(25), __esModule: true };\n\n/***/ },\n/* 25 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t__webpack_require__(26);\n\tmodule.exports = __webpack_require__(29).Object.assign;\n\n/***/ },\n/* 26 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// 19.1.3.1 Object.assign(target, source)\n\tvar $export = __webpack_require__(27);\n\n\t$export($export.S + $export.F, 'Object', {assign: __webpack_require__(42)});\n\n/***/ },\n/* 27 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar global    = __webpack_require__(28)\n\t  , core      = __webpack_require__(29)\n\t  , ctx       = __webpack_require__(30)\n\t  , hide      = __webpack_require__(32)\n\t  , PROTOTYPE = 'prototype';\n\n\tvar $export = function(type, name, source){\n\t  var IS_FORCED = type & $export.F\n\t    , IS_GLOBAL = type & $export.G\n\t    , IS_STATIC = type & $export.S\n\t    , IS_PROTO  = type & $export.P\n\t    , IS_BIND   = type & $export.B\n\t    , IS_WRAP   = type & $export.W\n\t    , exports   = IS_GLOBAL ? core : core[name] || (core[name] = {})\n\t    , expProto  = exports[PROTOTYPE]\n\t    , target    = IS_GLOBAL ? global : IS_STATIC ? global[name] : (global[name] || {})[PROTOTYPE]\n\t    , key, own, out;\n\t  if(IS_GLOBAL)source = name;\n\t  for(key in source){\n\t    // contains in native\n\t    own = !IS_FORCED && target && target[key] !== undefined;\n\t    if(own && key in exports)continue;\n\t    // export native or passed\n\t    out = own ? target[key] : source[key];\n\t    // prevent global pollution for namespaces\n\t    exports[key] = IS_GLOBAL && typeof target[key] != 'function' ? source[key]\n\t    // bind timers to global for call from export context\n\t    : IS_BIND && own ? ctx(out, global)\n\t    // wrap global constructors for prevent change them in library\n\t    : IS_WRAP && target[key] == out ? (function(C){\n\t      var F = function(a, b, c){\n\t        if(this instanceof C){\n\t          switch(arguments.length){\n\t            case 0: return new C;\n\t            case 1: return new C(a);\n\t            case 2: return new C(a, b);\n\t          } return new C(a, b, c);\n\t        } return C.apply(this, arguments);\n\t      };\n\t      F[PROTOTYPE] = C[PROTOTYPE];\n\t      return F;\n\t    // make static versions for prototype methods\n\t    })(out) : IS_PROTO && typeof out == 'function' ? ctx(Function.call, out) : out;\n\t    // export proto methods to core.%CONSTRUCTOR%.methods.%NAME%\n\t    if(IS_PROTO){\n\t      (exports.virtual || (exports.virtual = {}))[key] = out;\n\t      // export proto methods to core.%CONSTRUCTOR%.prototype.%NAME%\n\t      if(type & $export.R && expProto && !expProto[key])hide(expProto, key, out);\n\t    }\n\t  }\n\t};\n\t// type bitmap\n\t$export.F = 1;   // forced\n\t$export.G = 2;   // global\n\t$export.S = 4;   // static\n\t$export.P = 8;   // proto\n\t$export.B = 16;  // bind\n\t$export.W = 32;  // wrap\n\t$export.U = 64;  // safe\n\t$export.R = 128; // real proto method for `library` \n\tmodule.exports = $export;\n\n/***/ },\n/* 28 */\n/***/ function(module, exports) {\n\n\t// https://github.com/zloirock/core-js/issues/86#issuecomment-115759028\n\tvar global = module.exports = typeof window != 'undefined' && window.Math == Math\n\t  ? window : typeof self != 'undefined' && self.Math == Math ? self : Function('return this')();\n\tif(typeof __g == 'number')__g = global; // eslint-disable-line no-undef\n\n/***/ },\n/* 29 */\n/***/ function(module, exports) {\n\n\tvar core = module.exports = {version: '2.4.0'};\n\tif(typeof __e == 'number')__e = core; // eslint-disable-line no-undef\n\n/***/ },\n/* 30 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// optional / simple context binding\n\tvar aFunction = __webpack_require__(31);\n\tmodule.exports = function(fn, that, length){\n\t  aFunction(fn);\n\t  if(that === undefined)return fn;\n\t  switch(length){\n\t    case 1: return function(a){\n\t      return fn.call(that, a);\n\t    };\n\t    case 2: return function(a, b){\n\t      return fn.call(that, a, b);\n\t    };\n\t    case 3: return function(a, b, c){\n\t      return fn.call(that, a, b, c);\n\t    };\n\t  }\n\t  return function(/* ...args */){\n\t    return fn.apply(that, arguments);\n\t  };\n\t};\n\n/***/ },\n/* 31 */\n/***/ function(module, exports) {\n\n\tmodule.exports = function(it){\n\t  if(typeof it != 'function')throw TypeError(it + ' is not a function!');\n\t  return it;\n\t};\n\n/***/ },\n/* 32 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar dP         = __webpack_require__(33)\n\t  , createDesc = __webpack_require__(41);\n\tmodule.exports = __webpack_require__(37) ? function(object, key, value){\n\t  return dP.f(object, key, createDesc(1, value));\n\t} : function(object, key, value){\n\t  object[key] = value;\n\t  return object;\n\t};\n\n/***/ },\n/* 33 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar anObject       = __webpack_require__(34)\n\t  , IE8_DOM_DEFINE = __webpack_require__(36)\n\t  , toPrimitive    = __webpack_require__(40)\n\t  , dP             = Object.defineProperty;\n\n\texports.f = __webpack_require__(37) ? Object.defineProperty : function defineProperty(O, P, Attributes){\n\t  anObject(O);\n\t  P = toPrimitive(P, true);\n\t  anObject(Attributes);\n\t  if(IE8_DOM_DEFINE)try {\n\t    return dP(O, P, Attributes);\n\t  } catch(e){ /* empty */ }\n\t  if('get' in Attributes || 'set' in Attributes)throw TypeError('Accessors not supported!');\n\t  if('value' in Attributes)O[P] = Attributes.value;\n\t  return O;\n\t};\n\n/***/ },\n/* 34 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar isObject = __webpack_require__(35);\n\tmodule.exports = function(it){\n\t  if(!isObject(it))throw TypeError(it + ' is not an object!');\n\t  return it;\n\t};\n\n/***/ },\n/* 35 */\n/***/ function(module, exports) {\n\n\tmodule.exports = function(it){\n\t  return typeof it === 'object' ? it !== null : typeof it === 'function';\n\t};\n\n/***/ },\n/* 36 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = !__webpack_require__(37) && !__webpack_require__(38)(function(){\n\t  return Object.defineProperty(__webpack_require__(39)('div'), 'a', {get: function(){ return 7; }}).a != 7;\n\t});\n\n/***/ },\n/* 37 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// Thank's IE8 for his funny defineProperty\n\tmodule.exports = !__webpack_require__(38)(function(){\n\t  return Object.defineProperty({}, 'a', {get: function(){ return 7; }}).a != 7;\n\t});\n\n/***/ },\n/* 38 */\n/***/ function(module, exports) {\n\n\tmodule.exports = function(exec){\n\t  try {\n\t    return !!exec();\n\t  } catch(e){\n\t    return true;\n\t  }\n\t};\n\n/***/ },\n/* 39 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar isObject = __webpack_require__(35)\n\t  , document = __webpack_require__(28).document\n\t  // in old IE typeof document.createElement is 'object'\n\t  , is = isObject(document) && isObject(document.createElement);\n\tmodule.exports = function(it){\n\t  return is ? document.createElement(it) : {};\n\t};\n\n/***/ },\n/* 40 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// 7.1.1 ToPrimitive(input [, PreferredType])\n\tvar isObject = __webpack_require__(35);\n\t// instead of the ES6 spec version, we didn't implement @@toPrimitive case\n\t// and the second argument - flag - preferred type is a string\n\tmodule.exports = function(it, S){\n\t  if(!isObject(it))return it;\n\t  var fn, val;\n\t  if(S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it)))return val;\n\t  if(typeof (fn = it.valueOf) == 'function' && !isObject(val = fn.call(it)))return val;\n\t  if(!S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it)))return val;\n\t  throw TypeError(\"Can't convert object to primitive value\");\n\t};\n\n/***/ },\n/* 41 */\n/***/ function(module, exports) {\n\n\tmodule.exports = function(bitmap, value){\n\t  return {\n\t    enumerable  : !(bitmap & 1),\n\t    configurable: !(bitmap & 2),\n\t    writable    : !(bitmap & 4),\n\t    value       : value\n\t  };\n\t};\n\n/***/ },\n/* 42 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t// 19.1.2.1 Object.assign(target, source, ...)\n\tvar getKeys  = __webpack_require__(43)\n\t  , gOPS     = __webpack_require__(58)\n\t  , pIE      = __webpack_require__(59)\n\t  , toObject = __webpack_require__(60)\n\t  , IObject  = __webpack_require__(47)\n\t  , $assign  = Object.assign;\n\n\t// should work with symbols and should have deterministic property order (V8 bug)\n\tmodule.exports = !$assign || __webpack_require__(38)(function(){\n\t  var A = {}\n\t    , B = {}\n\t    , S = Symbol()\n\t    , K = 'abcdefghijklmnopqrst';\n\t  A[S] = 7;\n\t  K.split('').forEach(function(k){ B[k] = k; });\n\t  return $assign({}, A)[S] != 7 || Object.keys($assign({}, B)).join('') != K;\n\t}) ? function assign(target, source){ // eslint-disable-line no-unused-vars\n\t  var T     = toObject(target)\n\t    , aLen  = arguments.length\n\t    , index = 1\n\t    , getSymbols = gOPS.f\n\t    , isEnum     = pIE.f;\n\t  while(aLen > index){\n\t    var S      = IObject(arguments[index++])\n\t      , keys   = getSymbols ? getKeys(S).concat(getSymbols(S)) : getKeys(S)\n\t      , length = keys.length\n\t      , j      = 0\n\t      , key;\n\t    while(length > j)if(isEnum.call(S, key = keys[j++]))T[key] = S[key];\n\t  } return T;\n\t} : $assign;\n\n/***/ },\n/* 43 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// 19.1.2.14 / 15.2.3.14 Object.keys(O)\n\tvar $keys       = __webpack_require__(44)\n\t  , enumBugKeys = __webpack_require__(57);\n\n\tmodule.exports = Object.keys || function keys(O){\n\t  return $keys(O, enumBugKeys);\n\t};\n\n/***/ },\n/* 44 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar has          = __webpack_require__(45)\n\t  , toIObject    = __webpack_require__(46)\n\t  , arrayIndexOf = __webpack_require__(50)(false)\n\t  , IE_PROTO     = __webpack_require__(54)('IE_PROTO');\n\n\tmodule.exports = function(object, names){\n\t  var O      = toIObject(object)\n\t    , i      = 0\n\t    , result = []\n\t    , key;\n\t  for(key in O)if(key != IE_PROTO)has(O, key) && result.push(key);\n\t  // Don't enum bug & hidden keys\n\t  while(names.length > i)if(has(O, key = names[i++])){\n\t    ~arrayIndexOf(result, key) || result.push(key);\n\t  }\n\t  return result;\n\t};\n\n/***/ },\n/* 45 */\n/***/ function(module, exports) {\n\n\tvar hasOwnProperty = {}.hasOwnProperty;\n\tmodule.exports = function(it, key){\n\t  return hasOwnProperty.call(it, key);\n\t};\n\n/***/ },\n/* 46 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// to indexed object, toObject with fallback for non-array-like ES3 strings\n\tvar IObject = __webpack_require__(47)\n\t  , defined = __webpack_require__(49);\n\tmodule.exports = function(it){\n\t  return IObject(defined(it));\n\t};\n\n/***/ },\n/* 47 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// fallback for non-array-like ES3 and non-enumerable old V8 strings\n\tvar cof = __webpack_require__(48);\n\tmodule.exports = Object('z').propertyIsEnumerable(0) ? Object : function(it){\n\t  return cof(it) == 'String' ? it.split('') : Object(it);\n\t};\n\n/***/ },\n/* 48 */\n/***/ function(module, exports) {\n\n\tvar toString = {}.toString;\n\n\tmodule.exports = function(it){\n\t  return toString.call(it).slice(8, -1);\n\t};\n\n/***/ },\n/* 49 */\n/***/ function(module, exports) {\n\n\t// 7.2.1 RequireObjectCoercible(argument)\n\tmodule.exports = function(it){\n\t  if(it == undefined)throw TypeError(\"Can't call method on  \" + it);\n\t  return it;\n\t};\n\n/***/ },\n/* 50 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// false -> Array#indexOf\n\t// true  -> Array#includes\n\tvar toIObject = __webpack_require__(46)\n\t  , toLength  = __webpack_require__(51)\n\t  , toIndex   = __webpack_require__(53);\n\tmodule.exports = function(IS_INCLUDES){\n\t  return function($this, el, fromIndex){\n\t    var O      = toIObject($this)\n\t      , length = toLength(O.length)\n\t      , index  = toIndex(fromIndex, length)\n\t      , value;\n\t    // Array#includes uses SameValueZero equality algorithm\n\t    if(IS_INCLUDES && el != el)while(length > index){\n\t      value = O[index++];\n\t      if(value != value)return true;\n\t    // Array#toIndex ignores holes, Array#includes - not\n\t    } else for(;length > index; index++)if(IS_INCLUDES || index in O){\n\t      if(O[index] === el)return IS_INCLUDES || index || 0;\n\t    } return !IS_INCLUDES && -1;\n\t  };\n\t};\n\n/***/ },\n/* 51 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// 7.1.15 ToLength\n\tvar toInteger = __webpack_require__(52)\n\t  , min       = Math.min;\n\tmodule.exports = function(it){\n\t  return it > 0 ? min(toInteger(it), 0x1fffffffffffff) : 0; // pow(2, 53) - 1 == 9007199254740991\n\t};\n\n/***/ },\n/* 52 */\n/***/ function(module, exports) {\n\n\t// 7.1.4 ToInteger\n\tvar ceil  = Math.ceil\n\t  , floor = Math.floor;\n\tmodule.exports = function(it){\n\t  return isNaN(it = +it) ? 0 : (it > 0 ? floor : ceil)(it);\n\t};\n\n/***/ },\n/* 53 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar toInteger = __webpack_require__(52)\n\t  , max       = Math.max\n\t  , min       = Math.min;\n\tmodule.exports = function(index, length){\n\t  index = toInteger(index);\n\t  return index < 0 ? max(index + length, 0) : min(index, length);\n\t};\n\n/***/ },\n/* 54 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar shared = __webpack_require__(55)('keys')\n\t  , uid    = __webpack_require__(56);\n\tmodule.exports = function(key){\n\t  return shared[key] || (shared[key] = uid(key));\n\t};\n\n/***/ },\n/* 55 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar global = __webpack_require__(28)\n\t  , SHARED = '__core-js_shared__'\n\t  , store  = global[SHARED] || (global[SHARED] = {});\n\tmodule.exports = function(key){\n\t  return store[key] || (store[key] = {});\n\t};\n\n/***/ },\n/* 56 */\n/***/ function(module, exports) {\n\n\tvar id = 0\n\t  , px = Math.random();\n\tmodule.exports = function(key){\n\t  return 'Symbol('.concat(key === undefined ? '' : key, ')_', (++id + px).toString(36));\n\t};\n\n/***/ },\n/* 57 */\n/***/ function(module, exports) {\n\n\t// IE 8- don't enum bug keys\n\tmodule.exports = (\n\t  'constructor,hasOwnProperty,isPrototypeOf,propertyIsEnumerable,toLocaleString,toString,valueOf'\n\t).split(',');\n\n/***/ },\n/* 58 */\n/***/ function(module, exports) {\n\n\texports.f = Object.getOwnPropertySymbols;\n\n/***/ },\n/* 59 */\n/***/ function(module, exports) {\n\n\texports.f = {}.propertyIsEnumerable;\n\n/***/ },\n/* 60 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// 7.1.13 ToObject(argument)\n\tvar defined = __webpack_require__(49);\n\tmodule.exports = function(it){\n\t  return Object(defined(it));\n\t};\n\n/***/ },\n/* 61 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = __webpack_require__(62);\n\n/***/ },\n/* 62 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\n\texports.__esModule = true;\n\n\texports.default = function (obj) {\n\t  return obj && obj.__esModule ? obj : {\n\t    default: obj\n\t  };\n\t};\n\n/***/ },\n/* 63 */\n/***/ function(module, exports) {\n\n\tmodule.exports = __WEBPACK_EXTERNAL_MODULE_63__;\n\n/***/ },\n/* 64 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\n\tvar _interopRequireDefault = __webpack_require__(61)['default'];\n\n\tObject.defineProperty(exports, '__esModule', {\n\t    value: true\n\t});\n\n\tvar _react = __webpack_require__(63);\n\n\tvar _react2 = _interopRequireDefault(_react);\n\n\tvar _iconIcon = __webpack_require__(65);\n\n\tvar _iconIcon2 = _interopRequireDefault(_iconIcon);\n\n\tvar _spinnerSpinner = __webpack_require__(66);\n\n\tvar _spinnerSpinner2 = _interopRequireDefault(_spinnerSpinner);\n\n\tvar Overlay = _react2['default'].createClass({\n\t    displayName: 'Overlay',\n\n\t    propTypes: {\n\t        error: _react2['default'].PropTypes.bool,\n\t        togglePlay: _react2['default'].PropTypes.func,\n\t        paused: _react2['default'].PropTypes.bool,\n\t        copyKeys: _react2['default'].PropTypes.object,\n\t        loading: _react2['default'].PropTypes.bool\n\t    },\n\n\t    renderContent: function renderContent() {\n\t        var content;\n\t        if (this.props.error) {\n\t            content = _react2['default'].createElement(\n\t                'div',\n\t                { className: 'video-overlay__error' },\n\t                _react2['default'].createElement(\n\t                    'p',\n\t                    { className: 'video-overlay__error-text' },\n\t                    this.props.copyKeys.sourceError\n\t                )\n\t            );\n\t        } else if (this.props.loading) {\n\t            content = _react2['default'].createElement(\n\t                'div',\n\t                { className: 'video-overlay__loader' },\n\t                _react2['default'].createElement(_spinnerSpinner2['default'], null)\n\t            );\n\t        } else {\n\t            content = _react2['default'].createElement(\n\t                'div',\n\t                { className: 'video-overlay__play', onClick: this.props.togglePlay },\n\t                this.props.paused ? _react2['default'].createElement(_iconIcon2['default'], { name: 'play-1' }) : ''\n\t            );\n\t        }\n\t        return content;\n\t    },\n\n\t    render: function render() {\n\t        return _react2['default'].createElement(\n\t            'div',\n\t            { className: 'video-overlay' },\n\t            this.renderContent()\n\t        );\n\t    }\n\n\t});\n\n\texports['default'] = Overlay;\n\tmodule.exports = exports['default'];\n\n/***/ },\n/* 65 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/*eslint-disable */\n\t/*\n\t * Generated by the 'fontello-react' Grunt task.\n\t */\n\t'use strict';\n\n\tvar _interopRequireDefault = __webpack_require__(61)['default'];\n\n\tObject.defineProperty(exports, '__esModule', {\n\t    value: true\n\t});\n\n\tvar _react = __webpack_require__(63);\n\n\tvar _react2 = _interopRequireDefault(_react);\n\n\tvar Icon = _react2['default'].createClass({\n\t    displayName: 'Icon',\n\n\t    propTypes: {\n\t        name: _react2['default'].PropTypes.oneOf(['play-1', 'volume-off', 'volume-down', 'volume-up', 'resize-full', 'resize-small', 'pause-1'])\n\t    },\n\n\t    /**\n\t     * Default the icon to the first one just to show something\n\t     * @return {Object} The default props\n\t     */\n\t    getDefaultProps: function getDefaultProps() {\n\t        return {\n\t            name: 'play-1'\n\t        };\n\t    },\n\n\t    render: function render() {\n\t        return _react2['default'].createElement('span', { className: 'video-icon video-icon--' + this.props.name });\n\t    }\n\n\t});\n\n\texports['default'] = Icon;\n\tmodule.exports = exports['default'];\n\n/***/ },\n/* 66 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\n\tvar _interopRequireDefault = __webpack_require__(61)[\"default\"];\n\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\n\tvar _react = __webpack_require__(63);\n\n\tvar _react2 = _interopRequireDefault(_react);\n\n\tvar Spinner = _react2[\"default\"].createClass({\n\t    displayName: \"Spinner\",\n\n\t    render: function render() {\n\t        return _react2[\"default\"].createElement(\n\t            \"div\",\n\t            { className: \"video-spinner\" },\n\t            _react2[\"default\"].createElement(\"div\", { className: \"video-spinner__rect1\" }),\n\t            _react2[\"default\"].createElement(\"div\", { className: \"video-spinner__rect2\" }),\n\t            _react2[\"default\"].createElement(\"div\", { className: \"video-spinner__rect3\" }),\n\t            _react2[\"default\"].createElement(\"div\", { className: \"video-spinner__rect4\" }),\n\t            _react2[\"default\"].createElement(\"div\", { className: \"video-spinner__rect5\" })\n\t        );\n\t    }\n\n\t});\n\n\texports[\"default\"] = Spinner;\n\tmodule.exports = exports[\"default\"];\n\n/***/ },\n/* 67 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\n\tvar _extends = __webpack_require__(23)['default'];\n\n\tvar _interopRequireDefault = __webpack_require__(61)['default'];\n\n\tObject.defineProperty(exports, '__esModule', {\n\t    value: true\n\t});\n\n\tvar _react = __webpack_require__(63);\n\n\tvar _react2 = _interopRequireDefault(_react);\n\n\tvar _playPlay = __webpack_require__(68);\n\n\tvar _playPlay2 = _interopRequireDefault(_playPlay);\n\n\tvar _seekSeek = __webpack_require__(69);\n\n\tvar _seekSeek2 = _interopRequireDefault(_seekSeek);\n\n\tvar _muteMute = __webpack_require__(76);\n\n\tvar _muteMute2 = _interopRequireDefault(_muteMute);\n\n\tvar _timeTime = __webpack_require__(77);\n\n\tvar _timeTime2 = _interopRequireDefault(_timeTime);\n\n\tvar _fullscreenFullscreen = __webpack_require__(78);\n\n\tvar _fullscreenFullscreen2 = _interopRequireDefault(_fullscreenFullscreen);\n\n\tvar Controls = _react2['default'].createClass({\n\t    displayName: 'Controls',\n\n\t    propTypes: {\n\t        error: _react2['default'].PropTypes.bool,\n\t        children: _react2['default'].PropTypes.oneOfType([_react2['default'].PropTypes.arrayOf(_react2['default'].PropTypes.node), _react2['default'].PropTypes.node])\n\t    },\n\n\t    getDefaultProps: function getDefaultProps() {\n\t        return {\n\t            children: [_react2['default'].createElement(_playPlay2['default'], null), _react2['default'].createElement(_seekSeek2['default'], null), _react2['default'].createElement(_timeTime2['default'], null), _react2['default'].createElement(_muteMute2['default'], null), _react2['default'].createElement(_fullscreenFullscreen2['default'], null)]\n\t        };\n\t    },\n\n\t    /**\n\t     * Returns children components with props\n\t     * from the parent Video component. Needed\n\t     * for when custom React components are used.\n\t     * @return {Array.<ReactElement>} An array of components.\n\t     */\n\t    renderChildren: function renderChildren() {\n\t        var _this = this;\n\n\t        return _react2['default'].Children.map(this.props.children, function (child) {\n\t            return _react2['default'].cloneElement(child, _extends({}, _this.props));\n\t        });\n\t    },\n\n\t    render: function render() {\n\t        return !this.props.error ? _react2['default'].createElement(\n\t            'div',\n\t            { className: 'video-controls video__controls' },\n\t            this.renderChildren()\n\t        ) : null;\n\t    }\n\t});\n\n\texports['default'] = Controls;\n\tmodule.exports = exports['default'];\n\n/***/ },\n/* 68 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\n\tvar _interopRequireDefault = __webpack_require__(61)['default'];\n\n\tObject.defineProperty(exports, '__esModule', {\n\t    value: true\n\t});\n\n\tvar _react = __webpack_require__(63);\n\n\tvar _react2 = _interopRequireDefault(_react);\n\n\tvar _iconIcon = __webpack_require__(65);\n\n\tvar _iconIcon2 = _interopRequireDefault(_iconIcon);\n\n\tvar Play = _react2['default'].createClass({\n\t    displayName: 'Play',\n\n\t    propTypes: {\n\t        copyKeys: _react2['default'].PropTypes.object,\n\t        togglePlay: _react2['default'].PropTypes.func,\n\t        paused: _react2['default'].PropTypes.bool\n\t    },\n\n\t    /**\n\t     * As controls receive all props for extensibility, we do a quick\n\t     * check and make sure only the props we care about have changed.\n\t     * @param  {object} nextProps The next props from parent\n\t     * @return {boolean}          Whether we re-render or not\n\t     */\n\t    shouldComponentUpdate: function shouldComponentUpdate(nextProps) {\n\t        return this.props.paused !== nextProps.paused || this.props.togglePlay !== nextProps.togglePlay;\n\t    },\n\n\t    render: function render() {\n\t        return _react2['default'].createElement(\n\t            'button',\n\t            {\n\t                className: 'video-play video__control',\n\t                onClick: this.props.togglePlay,\n\t                'aria-label': this.props.paused ? this.props.copyKeys.play : this.props.copyKeys.pause },\n\t            this.props.paused ? _react2['default'].createElement(_iconIcon2['default'], { name: 'play-1' }) : _react2['default'].createElement(_iconIcon2['default'], { name: 'pause-1' })\n\t        );\n\t    }\n\t});\n\n\texports['default'] = Play;\n\tmodule.exports = exports['default'];\n\n/***/ },\n/* 69 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\n\tvar _interopRequireDefault = __webpack_require__(61)['default'];\n\n\tObject.defineProperty(exports, '__esModule', {\n\t    value: true\n\t});\n\n\tvar _react = __webpack_require__(63);\n\n\tvar _react2 = _interopRequireDefault(_react);\n\n\tvar _progressbarProgressBar = __webpack_require__(70);\n\n\tvar _progressbarProgressBar2 = _interopRequireDefault(_progressbarProgressBar);\n\n\tvar Seek = _react2['default'].createClass({\n\t    displayName: 'Seek',\n\n\t    propTypes: {\n\t        copyKeys: _react2['default'].PropTypes.object,\n\t        seek: _react2['default'].PropTypes.func,\n\t        percentageBuffered: _react2['default'].PropTypes.number,\n\t        percentagePlayed: _react2['default'].PropTypes.number,\n\t        duration: _react2['default'].PropTypes.number\n\t    },\n\n\t    getInitialState: function getInitialState() {\n\t        return {\n\t            // When the child range input becomes focused,\n\t            // we need to set this custom seek bar to look\n\t            // 'focused' with the correct styles. Need to\n\t            // do this via a class.\n\t            focused: false\n\t        };\n\t    },\n\n\t    /**\n\t     * As controls receive all props for extensibility, we do a quick\n\t     * check and make sure only the props we care about have changed.\n\t     * @param  {object} nextProps The next props from parent\n\t     * @return {boolean}          Whether we re-render or not\n\t     */\n\t    shouldComponentUpdate: function shouldComponentUpdate(nextProps) {\n\t        return this.props.seek !== nextProps.seek || this.props.percentageBuffered !== nextProps.percentageBuffered || this.props.percentagePlayed !== nextProps.percentagePlayed || this.props.duration !== nextProps.duration;\n\t    },\n\n\t    /**\n\t     * Calculates the seek time based on change of input.\n\t     * @param  {object} e Event object\n\t     * @return {undefined}\n\t     */\n\t    seek: function seek(e) {\n\t        this.props.seek(e.target.value * this.props.duration / 100, true);\n\t    },\n\n\t    onFocus: function onFocus() {\n\t        this.setState({\n\t            focused: true\n\t        });\n\t    },\n\n\t    onBlur: function onBlur() {\n\t        this.setState({\n\t            focused: false\n\t        });\n\t    },\n\n\t    render: function render() {\n\t        return _react2['default'].createElement(\n\t            'div',\n\t            {\n\t                className: 'video-seek video__control' + (this.state.focused ? ' video__control--focused' : ''),\n\t                'aria-label': this.props.copyKeys.seek },\n\t            _react2['default'].createElement(\n\t                'div',\n\t                { className: 'video-seek__container' },\n\t                _react2['default'].createElement('div', { style: {\n\t                        width: this.props.percentageBuffered + '%'\n\t                    }, className: 'video-seek__buffer-bar' }),\n\t                _react2['default'].createElement(_progressbarProgressBar2['default'], {\n\t                    onBlur: this.onBlur,\n\t                    onFocus: this.onFocus,\n\t                    onChange: this.seek,\n\t                    progress: this.props.percentagePlayed })\n\t            )\n\t        );\n\t    }\n\t});\n\n\texports['default'] = Seek;\n\tmodule.exports = exports['default'];\n\n/***/ },\n/* 70 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\n\tvar _defineProperty = __webpack_require__(71)['default'];\n\n\tvar _interopRequireDefault = __webpack_require__(61)['default'];\n\n\tObject.defineProperty(exports, '__esModule', {\n\t    value: true\n\t});\n\n\tvar _react = __webpack_require__(63);\n\n\tvar _react2 = _interopRequireDefault(_react);\n\n\tvar ProgressBar = _react2['default'].createClass({\n\t    displayName: 'ProgressBar',\n\n\t    propTypes: {\n\t        orientation: _react2['default'].PropTypes.string,\n\t        step: _react2['default'].PropTypes.number,\n\t        progress: _react2['default'].PropTypes.number,\n\t        onChange: _react2['default'].PropTypes.func,\n\t        onFocus: _react2['default'].PropTypes.func,\n\t        onBlur: _react2['default'].PropTypes.func\n\t    },\n\n\t    getDefaultProps: function getDefaultProps() {\n\t        return {\n\t            orientation: 'horizontal',\n\t            step: 0.1,\n\t            progress: 0,\n\t            onChange: this.onChange,\n\t            onFocus: this.onFocus,\n\t            onBlur: this.onBlur\n\t        };\n\t    },\n\n\t    componentDidMount: function componentDidMount() {\n\t        // 'orient' is not supported by React but\n\t        // is required for Firefox. Setting manually.\n\t        // https://github.com/facebook/react/issues/2453\n\t        this.refs.input.setAttribute('orient', this.props.orientation);\n\t    },\n\n\t    onChange: function onChange() {\n\t        // Placeholder\n\t    },\n\n\t    onFocus: function onFocus() {\n\t        // Placeholder\n\t    },\n\n\t    onBlur: function onBlur() {\n\t        // Placeholder\n\t    },\n\n\t    render: function render() {\n\t        return _react2['default'].createElement(\n\t            'div',\n\t            { className: 'video-progress-bar ' + (this.props.orientation === 'horizontal' ? 'video-progress-bar--horizontal' : 'video-progress-bar--vertical') },\n\t            _react2['default'].createElement('div', { className: 'video-progress-bar__fill', style: _defineProperty({}, this.props.orientation === 'horizontal' ? 'width' : 'height', this.props.progress + '%') }),\n\t            _react2['default'].createElement('input', { className: 'video-progress-bar__input',\n\t                onBlur: this.props.onBlur,\n\t                onFocus: this.props.onFocus,\n\t                ref: 'input',\n\t                onChange: this.props.onChange,\n\t                type: 'range',\n\t                min: '0',\n\t                max: '100',\n\t                value: this.props.progress,\n\t                step: this.props.step })\n\t        );\n\t    }\n\t});\n\n\texports['default'] = ProgressBar;\n\tmodule.exports = exports['default'];\n\n/***/ },\n/* 71 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = __webpack_require__(72);\n\n/***/ },\n/* 72 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\n\texports.__esModule = true;\n\n\tvar _defineProperty = __webpack_require__(73);\n\n\tvar _defineProperty2 = _interopRequireDefault(_defineProperty);\n\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n\texports.default = function (obj, key, value) {\n\t  if (key in obj) {\n\t    (0, _defineProperty2.default)(obj, key, {\n\t      value: value,\n\t      enumerable: true,\n\t      configurable: true,\n\t      writable: true\n\t    });\n\t  } else {\n\t    obj[key] = value;\n\t  }\n\n\t  return obj;\n\t};\n\n/***/ },\n/* 73 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = { \"default\": __webpack_require__(74), __esModule: true };\n\n/***/ },\n/* 74 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t__webpack_require__(75);\n\tvar $Object = __webpack_require__(29).Object;\n\tmodule.exports = function defineProperty(it, key, desc){\n\t  return $Object.defineProperty(it, key, desc);\n\t};\n\n/***/ },\n/* 75 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar $export = __webpack_require__(27);\n\t// 19.1.2.4 / 15.2.3.6 Object.defineProperty(O, P, Attributes)\n\t$export($export.S + $export.F * !__webpack_require__(37), 'Object', {defineProperty: __webpack_require__(33).f});\n\n/***/ },\n/* 76 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\n\tvar _interopRequireDefault = __webpack_require__(61)['default'];\n\n\tObject.defineProperty(exports, '__esModule', {\n\t    value: true\n\t});\n\n\tvar _react = __webpack_require__(63);\n\n\tvar _react2 = _interopRequireDefault(_react);\n\n\tvar _iconIcon = __webpack_require__(65);\n\n\tvar _iconIcon2 = _interopRequireDefault(_iconIcon);\n\n\tvar _progressbarProgressBar = __webpack_require__(70);\n\n\tvar _progressbarProgressBar2 = _interopRequireDefault(_progressbarProgressBar);\n\n\tvar Mute = _react2['default'].createClass({\n\t    displayName: 'Mute',\n\n\t    propTypes: {\n\t        copyKeys: _react2['default'].PropTypes.object,\n\t        volume: _react2['default'].PropTypes.number,\n\t        unmute: _react2['default'].PropTypes.func,\n\t        setVolume: _react2['default'].PropTypes.func,\n\t        toggleMute: _react2['default'].PropTypes.func,\n\t        muted: _react2['default'].PropTypes.bool\n\t    },\n\n\t    /**\n\t     * As controls receive all props for extensibility, we do a quick\n\t     * check and make sure only the props we care about have changed.\n\t     * @param  {object} nextProps The next props from parent\n\t     * @return {boolean}          Whether we re-render or not\n\t     */\n\t    shouldComponentUpdate: function shouldComponentUpdate(nextProps) {\n\t        return this.props.muted !== nextProps.muted || this.props.toggleMute !== nextProps.toggleMute || this.props.volume !== nextProps.volume || this.props.setVolume !== nextProps.setVolume || this.props.unmute !== nextProps.unmute;\n\t    },\n\n\t    /**\n\t     * Calculates the seek time based on click position and element offset.\n\t     * @param  {object} e Event object\n\t     * @return {undefined}\n\t     */\n\t    changeVolume: function changeVolume(e) {\n\t        this.props.setVolume(e.target.value / 100, true);\n\t        this.props.unmute();\n\t    },\n\n\t    toggleMute: function toggleMute() {\n\t        // If we volume has been dragged to 0, assume it is in\n\t        // a muted state and then toggle to full volume.\n\t        if (this.props.volume <= 0) {\n\t            this.props.setVolume(1);\n\t        } else {\n\t            this.props.toggleMute();\n\t        }\n\t    },\n\n\t    render: function render() {\n\t        return _react2['default'].createElement(\n\t            'div',\n\t            { className: 'video-mute video__control' },\n\t            _react2['default'].createElement(\n\t                'button',\n\t                {\n\t                    className: 'video-mute__inner',\n\t                    onClick: this.toggleMute,\n\t                    'aria-label': this.props.muted || this.props.volume <= 0 ? this.props.copyKeys.unmute : this.props.copyKeys.mute },\n\t                this.props.muted || this.props.volume <= 0 ? _react2['default'].createElement(_iconIcon2['default'], { name: 'volume-off' }) : _react2['default'].createElement(_iconIcon2['default'], { name: 'volume-up' })\n\t            ),\n\t            _react2['default'].createElement(\n\t                'div',\n\t                { className: 'video-mute__volume' },\n\t                _react2['default'].createElement(\n\t                    'div',\n\t                    { className: 'video-mute__track' },\n\t                    _react2['default'].createElement(_progressbarProgressBar2['default'], {\n\t                        orientation: 'vertical',\n\t                        onChange: this.changeVolume,\n\t                        progress: this.props.muted ? 0 : this.props.volume * 100\n\t                    })\n\t                )\n\t            )\n\t        );\n\t    }\n\t});\n\n\texports['default'] = Mute;\n\tmodule.exports = exports['default'];\n\n/***/ },\n/* 77 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\n\tvar _interopRequireDefault = __webpack_require__(61)['default'];\n\n\tObject.defineProperty(exports, '__esModule', {\n\t    value: true\n\t});\n\n\tvar _react = __webpack_require__(63);\n\n\tvar _react2 = _interopRequireDefault(_react);\n\n\tvar _iconIcon = __webpack_require__(65);\n\n\tvar _iconIcon2 = _interopRequireDefault(_iconIcon);\n\n\tvar Time = _react2['default'].createClass({\n\t    displayName: 'Time',\n\n\t    propTypes: {\n\t        currentTime: _react2['default'].PropTypes.number,\n\t        duration: _react2['default'].PropTypes.number\n\t    },\n\n\t    /**\n\t     * As controls receive all props for extensibility, we do a quick\n\t     * check and make sure only the props we care about have changed.\n\t     * @param  {object} nextProps The next props from parent\n\t     * @return {boolean}          Whether we re-render or not\n\t     */\n\t    shouldComponentUpdate: function shouldComponentUpdate(nextProps) {\n\t        return this.props.currentTime !== nextProps.currentTime || this.props.duration !== nextProps.duration;\n\t    },\n\n\t    /**\n\t     * Formats time into a friendlier format\n\t     * @param  {number} seconds Time in seconds\n\t     * @return {string}         Timestamp in the format of HH:MM:SS\n\t     */\n\t    formatTime: function formatTime(seconds) {\n\t        var date = new Date(Date.UTC(1970, 1, 1, 0, 0, 0, 0));\n\t        seconds = isNaN(seconds) ? 0 : Math.floor(seconds);\n\t        date.setSeconds(seconds);\n\t        return date.toISOString().substr(11, 8);\n\t    },\n\n\t    render: function render() {\n\t        return _react2['default'].createElement(\n\t            'div',\n\t            { className: 'video-time video__control' },\n\t            _react2['default'].createElement(\n\t                'span',\n\t                { className: 'video-time__current' },\n\t                this.formatTime(this.props.currentTime)\n\t            ),\n\t            '/',\n\t            _react2['default'].createElement(\n\t                'span',\n\t                { className: 'video-time__duration' },\n\t                this.formatTime(this.props.duration)\n\t            )\n\t        );\n\t    }\n\t});\n\n\texports['default'] = Time;\n\tmodule.exports = exports['default'];\n\n/***/ },\n/* 78 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\n\tvar _interopRequireDefault = __webpack_require__(61)['default'];\n\n\tObject.defineProperty(exports, '__esModule', {\n\t    value: true\n\t});\n\n\tvar _react = __webpack_require__(63);\n\n\tvar _react2 = _interopRequireDefault(_react);\n\n\tvar _iconIcon = __webpack_require__(65);\n\n\tvar _iconIcon2 = _interopRequireDefault(_iconIcon);\n\n\tvar Fullscreen = _react2['default'].createClass({\n\t    displayName: 'Fullscreen',\n\n\t    propTypes: {\n\t        copyKeys: _react2['default'].PropTypes.object,\n\t        fullscreen: _react2['default'].PropTypes.func\n\t    },\n\n\t    /**\n\t     * As controls receive all props for extensibility, we do a quick\n\t     * check and make sure only the props we care about have changed.\n\t     * @param  {object} nextProps The next props from parent\n\t     * @return {boolean}          Whether we re-render or not\n\t     */\n\t    shouldComponentUpdate: function shouldComponentUpdate(nextProps) {\n\t        return this.props.fullscreen !== nextProps.fullscreen;\n\t    },\n\n\t    render: function render() {\n\t        return _react2['default'].createElement(\n\t            'button',\n\t            {\n\t                onClick: this.props.fullscreen,\n\t                className: 'video-fullscreen video__control',\n\t                'aria-label': this.props.copyKeys.fullscreen },\n\t            _react2['default'].createElement(_iconIcon2['default'], { name: 'resize-full' })\n\t        );\n\t    }\n\t});\n\n\texports['default'] = Fullscreen;\n\tmodule.exports = exports['default'];\n\n/***/ },\n/* 79 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * lodash 3.0.4 (Custom Build) <https://lodash.com/>\n\t * Build: `lodash modern modularize exports=\"npm\" -o ./`\n\t * Copyright 2012-2015 The Dojo Foundation <http://dojofoundation.org/>\n\t * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n\t * Copyright 2009-2015 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n\t * Available under MIT license <https://lodash.com/license>\n\t */\n\tvar debounce = __webpack_require__(80);\n\n\t/** Used as the `TypeError` message for \"Functions\" methods. */\n\tvar FUNC_ERROR_TEXT = 'Expected a function';\n\n\t/**\n\t * Creates a throttled function that only invokes `func` at most once per\n\t * every `wait` milliseconds. The throttled function comes with a `cancel`\n\t * method to cancel delayed invocations. Provide an options object to indicate\n\t * that `func` should be invoked on the leading and/or trailing edge of the\n\t * `wait` timeout. Subsequent calls to the throttled function return the\n\t * result of the last `func` call.\n\t *\n\t * **Note:** If `leading` and `trailing` options are `true`, `func` is invoked\n\t * on the trailing edge of the timeout only if the the throttled function is\n\t * invoked more than once during the `wait` timeout.\n\t *\n\t * See [David Corbacho's article](http://drupalmotion.com/article/debounce-and-throttle-visual-explanation)\n\t * for details over the differences between `_.throttle` and `_.debounce`.\n\t *\n\t * @static\n\t * @memberOf _\n\t * @category Function\n\t * @param {Function} func The function to throttle.\n\t * @param {number} [wait=0] The number of milliseconds to throttle invocations to.\n\t * @param {Object} [options] The options object.\n\t * @param {boolean} [options.leading=true] Specify invoking on the leading\n\t *  edge of the timeout.\n\t * @param {boolean} [options.trailing=true] Specify invoking on the trailing\n\t *  edge of the timeout.\n\t * @returns {Function} Returns the new throttled function.\n\t * @example\n\t *\n\t * // avoid excessively updating the position while scrolling\n\t * jQuery(window).on('scroll', _.throttle(updatePosition, 100));\n\t *\n\t * // invoke `renewToken` when the click event is fired, but not more than once every 5 minutes\n\t * jQuery('.interactive').on('click', _.throttle(renewToken, 300000, {\n\t *   'trailing': false\n\t * }));\n\t *\n\t * // cancel a trailing throttled call\n\t * jQuery(window).on('popstate', throttled.cancel);\n\t */\n\tfunction throttle(func, wait, options) {\n\t  var leading = true,\n\t      trailing = true;\n\n\t  if (typeof func != 'function') {\n\t    throw new TypeError(FUNC_ERROR_TEXT);\n\t  }\n\t  if (options === false) {\n\t    leading = false;\n\t  } else if (isObject(options)) {\n\t    leading = 'leading' in options ? !!options.leading : leading;\n\t    trailing = 'trailing' in options ? !!options.trailing : trailing;\n\t  }\n\t  return debounce(func, wait, { 'leading': leading, 'maxWait': +wait, 'trailing': trailing });\n\t}\n\n\t/**\n\t * Checks if `value` is the [language type](https://es5.github.io/#x8) of `Object`.\n\t * (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n\t *\n\t * @static\n\t * @memberOf _\n\t * @category Lang\n\t * @param {*} value The value to check.\n\t * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n\t * @example\n\t *\n\t * _.isObject({});\n\t * // => true\n\t *\n\t * _.isObject([1, 2, 3]);\n\t * // => true\n\t *\n\t * _.isObject(1);\n\t * // => false\n\t */\n\tfunction isObject(value) {\n\t  // Avoid a V8 JIT bug in Chrome 19-20.\n\t  // See https://code.google.com/p/v8/issues/detail?id=2291 for more details.\n\t  var type = typeof value;\n\t  return !!value && (type == 'object' || type == 'function');\n\t}\n\n\tmodule.exports = throttle;\n\n\n/***/ },\n/* 80 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * lodash 3.1.1 (Custom Build) <https://lodash.com/>\n\t * Build: `lodash modern modularize exports=\"npm\" -o ./`\n\t * Copyright 2012-2015 The Dojo Foundation <http://dojofoundation.org/>\n\t * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n\t * Copyright 2009-2015 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n\t * Available under MIT license <https://lodash.com/license>\n\t */\n\tvar getNative = __webpack_require__(81);\n\n\t/** Used as the `TypeError` message for \"Functions\" methods. */\n\tvar FUNC_ERROR_TEXT = 'Expected a function';\n\n\t/* Native method references for those with the same name as other `lodash` methods. */\n\tvar nativeMax = Math.max,\n\t    nativeNow = getNative(Date, 'now');\n\n\t/**\n\t * Gets the number of milliseconds that have elapsed since the Unix epoch\n\t * (1 January 1970 00:00:00 UTC).\n\t *\n\t * @static\n\t * @memberOf _\n\t * @category Date\n\t * @example\n\t *\n\t * _.defer(function(stamp) {\n\t *   console.log(_.now() - stamp);\n\t * }, _.now());\n\t * // => logs the number of milliseconds it took for the deferred function to be invoked\n\t */\n\tvar now = nativeNow || function() {\n\t  return new Date().getTime();\n\t};\n\n\t/**\n\t * Creates a debounced function that delays invoking `func` until after `wait`\n\t * milliseconds have elapsed since the last time the debounced function was\n\t * invoked. The debounced function comes with a `cancel` method to cancel\n\t * delayed invocations. Provide an options object to indicate that `func`\n\t * should be invoked on the leading and/or trailing edge of the `wait` timeout.\n\t * Subsequent calls to the debounced function return the result of the last\n\t * `func` invocation.\n\t *\n\t * **Note:** If `leading` and `trailing` options are `true`, `func` is invoked\n\t * on the trailing edge of the timeout only if the the debounced function is\n\t * invoked more than once during the `wait` timeout.\n\t *\n\t * See [David Corbacho's article](http://drupalmotion.com/article/debounce-and-throttle-visual-explanation)\n\t * for details over the differences between `_.debounce` and `_.throttle`.\n\t *\n\t * @static\n\t * @memberOf _\n\t * @category Function\n\t * @param {Function} func The function to debounce.\n\t * @param {number} [wait=0] The number of milliseconds to delay.\n\t * @param {Object} [options] The options object.\n\t * @param {boolean} [options.leading=false] Specify invoking on the leading\n\t *  edge of the timeout.\n\t * @param {number} [options.maxWait] The maximum time `func` is allowed to be\n\t *  delayed before it is invoked.\n\t * @param {boolean} [options.trailing=true] Specify invoking on the trailing\n\t *  edge of the timeout.\n\t * @returns {Function} Returns the new debounced function.\n\t * @example\n\t *\n\t * // avoid costly calculations while the window size is in flux\n\t * jQuery(window).on('resize', _.debounce(calculateLayout, 150));\n\t *\n\t * // invoke `sendMail` when the click event is fired, debouncing subsequent calls\n\t * jQuery('#postbox').on('click', _.debounce(sendMail, 300, {\n\t *   'leading': true,\n\t *   'trailing': false\n\t * }));\n\t *\n\t * // ensure `batchLog` is invoked once after 1 second of debounced calls\n\t * var source = new EventSource('/stream');\n\t * jQuery(source).on('message', _.debounce(batchLog, 250, {\n\t *   'maxWait': 1000\n\t * }));\n\t *\n\t * // cancel a debounced call\n\t * var todoChanges = _.debounce(batchLog, 1000);\n\t * Object.observe(models.todo, todoChanges);\n\t *\n\t * Object.observe(models, function(changes) {\n\t *   if (_.find(changes, { 'user': 'todo', 'type': 'delete'})) {\n\t *     todoChanges.cancel();\n\t *   }\n\t * }, ['delete']);\n\t *\n\t * // ...at some point `models.todo` is changed\n\t * models.todo.completed = true;\n\t *\n\t * // ...before 1 second has passed `models.todo` is deleted\n\t * // which cancels the debounced `todoChanges` call\n\t * delete models.todo;\n\t */\n\tfunction debounce(func, wait, options) {\n\t  var args,\n\t      maxTimeoutId,\n\t      result,\n\t      stamp,\n\t      thisArg,\n\t      timeoutId,\n\t      trailingCall,\n\t      lastCalled = 0,\n\t      maxWait = false,\n\t      trailing = true;\n\n\t  if (typeof func != 'function') {\n\t    throw new TypeError(FUNC_ERROR_TEXT);\n\t  }\n\t  wait = wait < 0 ? 0 : (+wait || 0);\n\t  if (options === true) {\n\t    var leading = true;\n\t    trailing = false;\n\t  } else if (isObject(options)) {\n\t    leading = !!options.leading;\n\t    maxWait = 'maxWait' in options && nativeMax(+options.maxWait || 0, wait);\n\t    trailing = 'trailing' in options ? !!options.trailing : trailing;\n\t  }\n\n\t  function cancel() {\n\t    if (timeoutId) {\n\t      clearTimeout(timeoutId);\n\t    }\n\t    if (maxTimeoutId) {\n\t      clearTimeout(maxTimeoutId);\n\t    }\n\t    lastCalled = 0;\n\t    maxTimeoutId = timeoutId = trailingCall = undefined;\n\t  }\n\n\t  function complete(isCalled, id) {\n\t    if (id) {\n\t      clearTimeout(id);\n\t    }\n\t    maxTimeoutId = timeoutId = trailingCall = undefined;\n\t    if (isCalled) {\n\t      lastCalled = now();\n\t      result = func.apply(thisArg, args);\n\t      if (!timeoutId && !maxTimeoutId) {\n\t        args = thisArg = undefined;\n\t      }\n\t    }\n\t  }\n\n\t  function delayed() {\n\t    var remaining = wait - (now() - stamp);\n\t    if (remaining <= 0 || remaining > wait) {\n\t      complete(trailingCall, maxTimeoutId);\n\t    } else {\n\t      timeoutId = setTimeout(delayed, remaining);\n\t    }\n\t  }\n\n\t  function maxDelayed() {\n\t    complete(trailing, timeoutId);\n\t  }\n\n\t  function debounced() {\n\t    args = arguments;\n\t    stamp = now();\n\t    thisArg = this;\n\t    trailingCall = trailing && (timeoutId || !leading);\n\n\t    if (maxWait === false) {\n\t      var leadingCall = leading && !timeoutId;\n\t    } else {\n\t      if (!maxTimeoutId && !leading) {\n\t        lastCalled = stamp;\n\t      }\n\t      var remaining = maxWait - (stamp - lastCalled),\n\t          isCalled = remaining <= 0 || remaining > maxWait;\n\n\t      if (isCalled) {\n\t        if (maxTimeoutId) {\n\t          maxTimeoutId = clearTimeout(maxTimeoutId);\n\t        }\n\t        lastCalled = stamp;\n\t        result = func.apply(thisArg, args);\n\t      }\n\t      else if (!maxTimeoutId) {\n\t        maxTimeoutId = setTimeout(maxDelayed, remaining);\n\t      }\n\t    }\n\t    if (isCalled && timeoutId) {\n\t      timeoutId = clearTimeout(timeoutId);\n\t    }\n\t    else if (!timeoutId && wait !== maxWait) {\n\t      timeoutId = setTimeout(delayed, wait);\n\t    }\n\t    if (leadingCall) {\n\t      isCalled = true;\n\t      result = func.apply(thisArg, args);\n\t    }\n\t    if (isCalled && !timeoutId && !maxTimeoutId) {\n\t      args = thisArg = undefined;\n\t    }\n\t    return result;\n\t  }\n\t  debounced.cancel = cancel;\n\t  return debounced;\n\t}\n\n\t/**\n\t * Checks if `value` is the [language type](https://es5.github.io/#x8) of `Object`.\n\t * (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n\t *\n\t * @static\n\t * @memberOf _\n\t * @category Lang\n\t * @param {*} value The value to check.\n\t * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n\t * @example\n\t *\n\t * _.isObject({});\n\t * // => true\n\t *\n\t * _.isObject([1, 2, 3]);\n\t * // => true\n\t *\n\t * _.isObject(1);\n\t * // => false\n\t */\n\tfunction isObject(value) {\n\t  // Avoid a V8 JIT bug in Chrome 19-20.\n\t  // See https://code.google.com/p/v8/issues/detail?id=2291 for more details.\n\t  var type = typeof value;\n\t  return !!value && (type == 'object' || type == 'function');\n\t}\n\n\tmodule.exports = debounce;\n\n\n/***/ },\n/* 81 */\n/***/ function(module, exports) {\n\n\t/**\n\t * lodash 3.9.1 (Custom Build) <https://lodash.com/>\n\t * Build: `lodash modern modularize exports=\"npm\" -o ./`\n\t * Copyright 2012-2015 The Dojo Foundation <http://dojofoundation.org/>\n\t * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n\t * Copyright 2009-2015 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n\t * Available under MIT license <https://lodash.com/license>\n\t */\n\n\t/** `Object#toString` result references. */\n\tvar funcTag = '[object Function]';\n\n\t/** Used to detect host constructors (Safari > 5). */\n\tvar reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n\n\t/**\n\t * Checks if `value` is object-like.\n\t *\n\t * @private\n\t * @param {*} value The value to check.\n\t * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n\t */\n\tfunction isObjectLike(value) {\n\t  return !!value && typeof value == 'object';\n\t}\n\n\t/** Used for native method references. */\n\tvar objectProto = Object.prototype;\n\n\t/** Used to resolve the decompiled source of functions. */\n\tvar fnToString = Function.prototype.toString;\n\n\t/** Used to check objects for own properties. */\n\tvar hasOwnProperty = objectProto.hasOwnProperty;\n\n\t/**\n\t * Used to resolve the [`toStringTag`](http://ecma-international.org/ecma-262/6.0/#sec-object.prototype.tostring)\n\t * of values.\n\t */\n\tvar objToString = objectProto.toString;\n\n\t/** Used to detect if a method is native. */\n\tvar reIsNative = RegExp('^' +\n\t  fnToString.call(hasOwnProperty).replace(/[\\\\^$.*+?()[\\]{}|]/g, '\\\\$&')\n\t  .replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$'\n\t);\n\n\t/**\n\t * Gets the native function at `key` of `object`.\n\t *\n\t * @private\n\t * @param {Object} object The object to query.\n\t * @param {string} key The key of the method to get.\n\t * @returns {*} Returns the function if it's native, else `undefined`.\n\t */\n\tfunction getNative(object, key) {\n\t  var value = object == null ? undefined : object[key];\n\t  return isNative(value) ? value : undefined;\n\t}\n\n\t/**\n\t * Checks if `value` is classified as a `Function` object.\n\t *\n\t * @static\n\t * @memberOf _\n\t * @category Lang\n\t * @param {*} value The value to check.\n\t * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n\t * @example\n\t *\n\t * _.isFunction(_);\n\t * // => true\n\t *\n\t * _.isFunction(/abc/);\n\t * // => false\n\t */\n\tfunction isFunction(value) {\n\t  // The use of `Object#toString` avoids issues with the `typeof` operator\n\t  // in older versions of Chrome and Safari which return 'function' for regexes\n\t  // and Safari 8 equivalents which return 'object' for typed array constructors.\n\t  return isObject(value) && objToString.call(value) == funcTag;\n\t}\n\n\t/**\n\t * Checks if `value` is the [language type](https://es5.github.io/#x8) of `Object`.\n\t * (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n\t *\n\t * @static\n\t * @memberOf _\n\t * @category Lang\n\t * @param {*} value The value to check.\n\t * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n\t * @example\n\t *\n\t * _.isObject({});\n\t * // => true\n\t *\n\t * _.isObject([1, 2, 3]);\n\t * // => true\n\t *\n\t * _.isObject(1);\n\t * // => false\n\t */\n\tfunction isObject(value) {\n\t  // Avoid a V8 JIT bug in Chrome 19-20.\n\t  // See https://code.google.com/p/v8/issues/detail?id=2291 for more details.\n\t  var type = typeof value;\n\t  return !!value && (type == 'object' || type == 'function');\n\t}\n\n\t/**\n\t * Checks if `value` is a native function.\n\t *\n\t * @static\n\t * @memberOf _\n\t * @category Lang\n\t * @param {*} value The value to check.\n\t * @returns {boolean} Returns `true` if `value` is a native function, else `false`.\n\t * @example\n\t *\n\t * _.isNative(Array.prototype.push);\n\t * // => true\n\t *\n\t * _.isNative(_);\n\t * // => false\n\t */\n\tfunction isNative(value) {\n\t  if (value == null) {\n\t    return false;\n\t  }\n\t  if (isFunction(value)) {\n\t    return reIsNative.test(fnToString.call(value));\n\t  }\n\t  return isObjectLike(value) && reIsHostCtor.test(value);\n\t}\n\n\tmodule.exports = getNative;\n\n\n/***/ },\n/* 82 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\n\tObject.defineProperty(exports, '__esModule', {\n\t    value: true\n\t});\n\tvar copy = {\n\t    sourceError: 'Video cannot be played in this browser.',\n\t    play: 'Play video',\n\t    pause: 'Pause video',\n\t    mute: 'Mute video',\n\t    unmute: 'Unmute video',\n\t    fullscreen: 'View video fullscreen',\n\t    seek: 'Seek video'\n\t};\n\texports['default'] = copy;\n\tmodule.exports = exports['default'];\n\n/***/ }\n/******/ ])\n});\n;//# sourceMappingURL=data:application/json;charset=utf-8;base64,");

/***/ }),

/***/ 357:
/* unknown exports provided */
/* all exports used */
/*!*********************************!*\
  !*** ./client/public/video.mp4 ***!
  \*********************************/
/***/ (function(module, exports, __webpack_require__) {

eval("module.exports = __webpack_require__.p + \"5b9c42475068a1197bda1c0c097c73aa.mp4\";//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMzU3LmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vY2xpZW50L3B1YmxpYy92aWRlby5tcDQ/YTBjYyJdLCJzb3VyY2VzQ29udGVudCI6WyJtb2R1bGUuZXhwb3J0cyA9IF9fd2VicGFja19wdWJsaWNfcGF0aF9fICsgXCI1YjljNDI0NzUwNjhhMTE5N2JkYTFjMGMwOTdjNzNhYS5tcDRcIjtcblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL2NsaWVudC9wdWJsaWMvdmlkZW8ubXA0XG4vLyBtb2R1bGUgaWQgPSAzNTdcbi8vIG1vZHVsZSBjaHVua3MgPSAwIl0sIm1hcHBpbmdzIjoiQUFBQSIsInNvdXJjZVJvb3QiOiIifQ==");

/***/ }),

/***/ 48:
/* unknown exports provided */
/* all exports used */
/*!****************************!*\
  !*** ./client/app/app.jsx ***!
  \****************************/
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _react = __webpack_require__(/*! react */ 20);\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _reactHtml5video = __webpack_require__(/*! react-html5video */ 335);\n\nvar _reactHtml5video2 = _interopRequireDefault(_reactHtml5video);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar mp4 = __webpack_require__(/*! ../public/video.mp4 */ 357);\n\nvar App = function App() {\n  return _react2.default.createElement(\n    'div',\n    null,\n    _react2.default.createElement(\n      _reactHtml5video2.default,\n      { autoPlay: true, muted: true, loop: true },\n      _react2.default.createElement('source', { src: mp4, type: 'video/mp4' }),\n      ' Your browser does not support the video tag.'\n    ),\n    _react2.default.createElement(\n      'div',\n      { 'class': 'container valign-wrapper', id: 'header' },\n      _react2.default.createElement(\n        'div',\n        { 'class': 'row valign center-align' },\n        _react2.default.createElement(\n          'div',\n          { 'class': 'col s12' },\n          _react2.default.createElement(\n            'h1',\n            null,\n            'Rico Chen'\n          )\n        ),\n        _react2.default.createElement(\n          'div',\n          { 'class': 'col s12' },\n          _react2.default.createElement(\n            'h3',\n            null,\n            'Software Engineer'\n          ),\n          ' '\n        ),\n        _react2.default.createElement(\n          'div',\n          { 'class': 'col s12' },\n          _react2.default.createElement(\n            'div',\n            { 'class': 'icons' },\n            _react2.default.createElement(\n              'ul',\n              null,\n              _react2.default.createElement(\n                'li',\n                null,\n                _react2.default.createElement(\n                  'a',\n                  { href: 'https://github.com/ricochen', target: '_blank' },\n                  _react2.default.createElement('i', { 'class': 'fa fa-github fa-2x' })\n                )\n              ),\n              _react2.default.createElement(\n                'li',\n                null,\n                _react2.default.createElement(\n                  'a',\n                  { href: 'https://linkedin.com/in/ricochenx', target: '_blank' },\n                  _react2.default.createElement('i', { 'class': 'fa fa-linkedin fa-2x' })\n                )\n              ),\n              _react2.default.createElement(\n                'li',\n                null,\n                _react2.default.createElement(\n                  'a',\n                  { 'class': 'tooltipped', 'data-position': 'bottom', 'data-delay': '50', 'data-tooltip': 'ricochenx@gmail.com' },\n                  _react2.default.createElement('i', { 'class': 'fa fa-envelope-o fa-2x' })\n                )\n              ),\n              _react2.default.createElement(\n                'li',\n                null,\n                _react2.default.createElement(\n                  'a',\n                  { href: 'http://ricochenx.com/blog' },\n                  'Blog'\n                )\n              )\n            )\n          )\n        ),\n        _react2.default.createElement(\n          'div',\n          { 'class': 'col s12 arrow' },\n          ' ',\n          _react2.default.createElement(\n            'a',\n            { href: '#about' },\n            _react2.default.createElement('i', { 'class': 'fa fa-angle-down fa-5x' })\n          ),\n          ' '\n        )\n      )\n    )\n  );\n};\n\nexports.default = App;//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNDguanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vY2xpZW50L2FwcC9hcHAuanN4PzBhMmQiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCBWaWRlbyBmcm9tICdyZWFjdC1odG1sNXZpZGVvJztcbmNvbnN0IG1wNCA9IHJlcXVpcmUoJy4uL3B1YmxpYy92aWRlby5tcDQnKTtcblxuY29uc3QgQXBwID0gKCkgPT4gKFxuICA8ZGl2PlxuICA8VmlkZW8gYXV0b1BsYXkgbXV0ZWQgbG9vcD5cbiAgICA8c291cmNlIHNyYz17bXA0fSB0eXBlPVwidmlkZW8vbXA0XCIvPiBZb3VyIGJyb3dzZXIgZG9lcyBub3Qgc3VwcG9ydCB0aGUgdmlkZW8gdGFnLiBcbiAgPC9WaWRlbz5cbiAgPGRpdiBjbGFzcz1cImNvbnRhaW5lciB2YWxpZ24td3JhcHBlclwiIGlkPVwiaGVhZGVyXCI+XG4gICAgICA8ZGl2IGNsYXNzPVwicm93IHZhbGlnbiBjZW50ZXItYWxpZ25cIj5cbiAgICAgICAgPGRpdiBjbGFzcz1cImNvbCBzMTJcIj5cbiAgICAgICAgICA8aDE+UmljbyBDaGVuPC9oMT48L2Rpdj5cbiAgICAgICAgPGRpdiBjbGFzcz1cImNvbCBzMTJcIj5cbiAgICAgICAgICA8aDM+U29mdHdhcmUgRW5naW5lZXI8L2gzPiA8L2Rpdj5cbiAgICAgICAgPGRpdiBjbGFzcz1cImNvbCBzMTJcIj5cbiAgICAgICAgICA8ZGl2IGNsYXNzPVwiaWNvbnNcIj5cbiAgICAgICAgICAgIDx1bD5cbiAgICAgICAgICAgICAgPGxpPjxhIGhyZWY9XCJodHRwczovL2dpdGh1Yi5jb20vcmljb2NoZW5cIiB0YXJnZXQ9XCJfYmxhbmtcIj48aSBjbGFzcz1cImZhIGZhLWdpdGh1YiBmYS0yeFwiPjwvaT48L2E+PC9saT5cbiAgICAgICAgICAgICAgPGxpPjxhIGhyZWY9XCJodHRwczovL2xpbmtlZGluLmNvbS9pbi9yaWNvY2hlbnhcIiB0YXJnZXQ9XCJfYmxhbmtcIj48aSBjbGFzcz1cImZhIGZhLWxpbmtlZGluIGZhLTJ4XCI+PC9pPjwvYT48L2xpPlxuICAgICAgICAgICAgICA8bGk+PGEgY2xhc3M9XCJ0b29sdGlwcGVkXCIgZGF0YS1wb3NpdGlvbj1cImJvdHRvbVwiIGRhdGEtZGVsYXk9XCI1MFwiIGRhdGEtdG9vbHRpcD1cInJpY29jaGVueEBnbWFpbC5jb21cIj48aSBjbGFzcz1cImZhIGZhLWVudmVsb3BlLW8gZmEtMnhcIj48L2k+PC9hPjwvbGk+XG4gICAgICAgICAgICAgIDxsaT48YSBocmVmPVwiaHR0cDovL3JpY29jaGVueC5jb20vYmxvZ1wiPkJsb2c8L2E+PC9saT5cbiAgICAgICAgICAgIDwvdWw+XG4gICAgICAgICAgPC9kaXY+XG4gICAgICAgIDwvZGl2PlxuICAgICAgICA8ZGl2IGNsYXNzPVwiY29sIHMxMiBhcnJvd1wiPiA8YSBocmVmPVwiI2Fib3V0XCI+PGkgY2xhc3M9XCJmYSBmYS1hbmdsZS1kb3duIGZhLTV4XCI+PC9pPjwvYT4gPC9kaXY+XG4gICAgICA8L2Rpdj5cbiAgICA8L2Rpdj5cbiAgICA8L2Rpdj5cbik7XG5cbmV4cG9ydCBkZWZhdWx0IEFwcDtcblxuXG4vLyBXRUJQQUNLIEZPT1RFUiAvL1xuLy8gY2xpZW50L2FwcC9hcHAuanN4Il0sIm1hcHBpbmdzIjoiOzs7Ozs7QUFBQTtBQUNBOzs7QUFBQTtBQUNBOzs7OztBQUFBO0FBQ0E7QUFDQTtBQUFBO0FBQ0E7QUFBQTtBQUNBO0FBQUE7QUFBQTtBQUNBO0FBREE7QUFBQTtBQUdBO0FBQUE7QUFBQTtBQUNBO0FBQUE7QUFBQTtBQUNBO0FBQUE7QUFBQTtBQUNBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFEQTtBQUVBO0FBQUE7QUFBQTtBQUNBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFEQTtBQUFBO0FBRUE7QUFBQTtBQUFBO0FBQ0E7QUFBQTtBQUFBO0FBQ0E7QUFBQTtBQUFBO0FBQ0E7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQ0E7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQ0E7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQ0E7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBSkE7QUFEQTtBQURBO0FBVUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQWZBO0FBREE7QUFKQTtBQURBO0FBQ0E7QUEwQkEiLCJzb3VyY2VSb290IjoiIn0=");

/***/ })

})